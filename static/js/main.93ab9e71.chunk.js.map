{"version":3,"sources":["logo.svg","services/Generadores.js","pages/PuntoA.js","services/PruebaChiCuadrado.js","pages/PuntoB.js","App.js","reportWebVitals.js","index.js"],"names":["CongruencialMixto","x0","k","g","c","calcularA","calcularM","Math","pow","calcularNextXi","xi","console","log","a","m","calcularRandom","toString","this","CongruencialMultiplicativo","PuntoA","useState","generador","setGenerador","setK","setG","setC","setX0","generadorInstance","setGeneradorInstance","data","setData","useEffect","onChange","e","Number","parseInt","target","value","type","disabled","onClick","auxData","i","xiOlder","randomNumber","push","toFixed","length","lastRow","map","row","PruebaChiCuadrado","numIntervalos","muestra","confianza","generarIntervalos","paso","min","parseFloat","max","mc","contarFrecuenciaMuestra","counter","calcularFrecuenciaEsperada","calcularColumnas","forEach","fo","fe","aux1","aux2","aux3","getGradosDeLibertad","calcularChiCuadrado","verificarChiCuadrado","PuntoB","n","setN","setMuestra","chiInstance","setChiInstance","rows","setRows","chartData","setChartData","generatorType","setGeneratorType","kk","setKk","chi","size","aux","random","generarMuestra","auxChartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","style","width","display","verticalAlign","textAlign","marginLeft","item","col1","col2","col3","App","className","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93ab9e71.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","class CongruencialMixto {\n    \n    constructor(x0,k,g,c){\n        this.a = this.calcularA(k);\n        this.m = this.calcularM(g);\n        this.c = c;\n        this.x0 = x0;\n    }\n\n    calcularA = k => {\n        return 4*k+1;\n    }\n\n    calcularM = g => {\n        return Math.pow(2,g);\n    }\n\n    calcularNextXi = (xi) => {\n        console.log(xi);\n        return (this.a*xi+this.c)%this.m;\n    }\n\n    calcularRandom = (xi) => {\n        return xi/(this.m-1);\n    }\n    \n    toString = ()=>{\n        return this.a+' '+this.m+' '+this.c;\n    }\n}\n\nexport {CongruencialMixto};\n\nclass CongruencialMultiplicativo {\n    \n    constructor(x0,k,g){\n        this.a = this.calcularA(k);\n        this.m = this.calcularM(g);\n        this.x0 = x0;\n    }\n\n    calcularA = k => {\n        return 8*k+3;\n    }\n\n    calcularM = g => {\n        return Math.pow(2,g);\n    }\n\n    calcularNextXi = (xi) => {\n        return (this.a*xi)%this.m;\n    }\n\n    calcularRandom = (xi) => {\n        return xi/(this.m-1);\n    }\n\n    toString = ()=>{\n        return this.a+' '+this.m;\n    }\n    \n}\n\nexport {CongruencialMultiplicativo};\n\n","import {useState, useEffect} from 'react';\nimport { CongruencialMixto, CongruencialMultiplicativo} from '../services/Generadores';\n\nconst PuntoA = ()=>{\n\n    const [generador, setGenerador] = useState(1);\n    const [k, setK] = useState();\n    const [g, setG] = useState();\n    const [c, setC] = useState();\n    const [x0,setX0] = useState();\n    const [generadorInstance, setGeneradorInstance] = useState(new CongruencialMultiplicativo());\n    const [data,setData] = useState([]);\n\n    useEffect(()=>{\n        if(generador===1){\n            setGeneradorInstance(new CongruencialMixto(x0,k,g,c));\n        }else if(generador===2) {\n            setC('');\n            setGeneradorInstance(new CongruencialMultiplicativo(x0,k,g));\n        }\n        setData([])\n    },[generador,x0,k,g,c]);\n\n    const generarNumeros = () => {\n        const auxData=[];\n        for( let i= 0;i<20;i++){\n            let xiOlder = generadorInstance.x0;\n            if (i>0){\n                xiOlder = auxData[i-1].xi;\n            }\n\n            const xi = generadorInstance.calcularNextXi(xiOlder);\n            const randomNumber = generadorInstance.calcularRandom(xi);\n\n            auxData.push({\n                i:i,\n                xi: xi,\n                randomNumber:randomNumber.toFixed(4),\n            });\n        }\n        setData(auxData);\n    }\n\n    const addRow = ()=> {\n        const lastRow = data[data.length-1];\n        const xi = generadorInstance.calcularNextXi(lastRow.xi);\n        data.push({\n            i:lastRow.i+1,\n            xi: xi,\n            randomNumber: generadorInstance.calcularRandom(xi).toFixed(4),\n        });\n        setData([...data]);\n    }\n\n    return (\n        <>\n        <div>\n            <h1>PuntoA</h1>\n            <div>\n                <label>Metodo:</label>\n                <select\n                    onChange={ e=>{\n                        setGenerador(Number.parseInt(e.target.value));\n                    }}\n                    >   \n                    <option value='1'>CONGRUENCIAL MIXTO</option>\n                    <option value='2'>CONGRUENCIAL MULTIPLICATIVO</option>\n                </select>\n            </div>\n            <div>\n                <label>Xo:</label>\n                <input \n                    type='number' \n                    value={x0}\n                    onChange={(e)=>{\n                        setX0(Number.parseInt(e.target.value));\n                    }}\n                    />\n            </div>\n            <div>\n                <label>K:</label>\n                <input \n                    type='number' \n                    value={k}\n                    onChange={(e)=>{\n                        setK(Number.parseInt(e.target.value));\n                    }}\n                />\n            </div>\n            <div>\n                <label>G:</label>\n                <input \n                    type='number' \n                    value={g}\n                    onChange={(e)=>{\n                        setG(Number.parseInt(e.target.value));\n                    }}\n                />\n            </div>\n            {generador===1 &&\n                <div>\n                    <label>C:</label>\n                <input \n                type='number' \n                value={c}\n                onChange={(e)=>{\n                    setC(Number.parseInt(e.target.value));\n                }}\n                />\n                </div>\n            }            \n            <div>\n                <label>A:</label>\n                <input \n                    type='number'\n                    disabled={true}\n                    value={generadorInstance.a}                    \n                />\n            </div>\n            <div>\n                <label>M:</label>\n                <input \n                    type='number'\n                    disabled={true}\n                    value={generadorInstance.m}                    \n                />\n            </div>            \n            <input \n                type='button'\n                value='GENERAR'\n                onClick={generarNumeros}\n            />\n            {data.length>1 &&\n                <input \n                    type='button'\n                    value='+1'\n                    onClick={addRow}\n                />\n            }\n        </div>\n        <div>            \n            <table>\n                <thead>\n                    <th>i</th>\n                    <th>Xi</th>\n                </thead>\n                <tbody>\n                {data.map((row,i) => (\n                    <tr>\n                        <td>{i+1}</td><td>{row.randomNumber}</td>\n                    </tr>))}\n                </tbody>\n            </table>\n        </div>\n        </>\n    );\n}\n\nexport default PuntoA;","class PruebaChiCuadrado{\n    constructor(numIntervalos, muestra, confianza=0.95){\n        this.numIntervalos=numIntervalos;\n        this.muestra = muestra;\n        this.confianza = confianza;\n        this.data = [];\n    }\n\n    generarIntervalos = () => {\n        const paso = 1/this.numIntervalos;\n        for(let i=0;i<this.numIntervalos;i++){\n            const min = parseFloat((i*paso).toFixed(4));\n            const max = parseFloat(((i+1)*paso).toFixed(4));\n            const mc = parseFloat(((min+max)/2).toFixed(4));\n            this.data.push({\n                min,\n                max,\n                mc,\n            })\n        }\n    }\n\n    contarFrecuenciaMuestra = (min,max) => {\n        let counter = 0;\n        for(let i=0;i<this.muestra.length;i++){\n            if(this.muestra[i]>=min && this.muestra[i]<max){\n                counter+=1;\n            }\n        }\n        return counter;\n    }\n\n    calcularFrecuenciaEsperada = ()=>{\n        return parseFloat((this.muestra.length/this.numIntervalos).toFixed(4));\n    }\n\n    calcularColumnas = () => {\n        this.data.forEach((row,i)=>{\n            const fo = this.contarFrecuenciaMuestra(row.min,row.max);\n            const fe = this.calcularFrecuenciaEsperada();\n            const aux1 = parseFloat((fo-fe).toFixed(4));\n            const aux2 = parseFloat((Math.pow(aux1,2)).toFixed(4));\n            const aux3 = parseFloat((aux2/fe).toFixed(4));\n            const c = i == 0 ? aux3 : parseFloat((this.data[i-1].c+aux3).toFixed(4));\n            row['fo']= fo;\n            row['fe'] = fe;\n            row['col1'] = aux1;\n            row['col2'] = aux2;\n            row['col3'] = aux3;\n            row['c'] = c;\n        });\n    }\n\n    getGradosDeLibertad = ()=>{\n        return this.numIntervalos-1;\n    }\n\n    calcularChiCuadrado = ()=>{\n        this.generarIntervalos();\n        this.calcularColumnas();\n    }\n\n    verificarChiCuadrado = () => {\n        return {};\n    }  \n\n}\n\nexport {PruebaChiCuadrado}","import {useState, useEffect} from 'react';\nimport { PruebaChiCuadrado } from '../services/PruebaChiCuadrado';\nimport { CongruencialMixto } from '../services/Generadores';\nimport { Bar } from 'react-chartjs-2';\n\nconst PuntoB = () => {\n    const [k,setK] = useState(10);\n    const [n,setN] = useState(0);\n    const [muestra,setMuestra] = useState([]);\n    const [chiInstance, setChiInstance] = useState();\n    const [rows,setRows] = useState([]);\n    const [chartData, setChartData] = useState({});\n\n\n    const [generatorType, setGeneratorType] = useState(1);\n    const [kk, setKk] = useState();\n    const [g, setG] = useState();\n    const [c, setC] = useState();\n    const [x0,setX0] = useState();\n    const [generadorInstance, setGeneradorInstance] = useState(null);\n\n    const generarMuestra = (size) => {\n        const aux = [];\n        if(generatorType===1){\n            for(let i=0;i<size;i++){\n                aux.push(parseFloat(Math.random().toFixed(4)));\n            }\n        }else if(\n            generadorInstance\n            && x0 && kk && g && c){\n            let xiOlder = generadorInstance.x0;\n            for( let i= 0;i<size;i++){\n                const xi = parseFloat(generadorInstance.calcularNextXi(xiOlder));\n                const randomNumber = generadorInstance.calcularRandom(xi);    \n                aux.push(parseFloat(randomNumber.toFixed(4)));\n                xiOlder = xi;\n            }\n        }\n        return aux;\n    };\n\n    useEffect(()=>{\n        setN(0);\n        setChiInstance(null);\n        if(generatorType===2){\n            setGeneradorInstance(new CongruencialMixto(x0,kk,g,c));            \n        }else {\n            setGeneradorInstance(null);            \n        }              \n    },[generatorType,x0,kk,g,c]);\n\n    useEffect(()=>{\n        const chi = new PruebaChiCuadrado(k,muestra);\n        chi.calcularChiCuadrado();\n        setChiInstance(chi);\n    },[muestra,k]);\n\n    useEffect(()=>{        \n        setMuestra(generarMuestra(n));        \n    }, [n]);   \n\n    useEffect(()=>{\n        if(chiInstance){\n            setRows(chiInstance.data);\n        }\n    },[chiInstance]);\n\n    useEffect(()=>{\n        const auxChartData = {\n            labels:[],\n            datasets:[\n                {\n                    label:'FO',\n                    data:[],\n                    backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',                    \n                    ],\n                    borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    ],\n                    borderWidth: 1,\n                },\n                {\n                    label:'FE',\n                    data:[],\n                    backgroundColor: [\n                    'rgba(54, 162, 235, 0.2)',                    \n                    ],\n                    borderColor: [\n                    'rgba(54, 162, 235, 1)',\n                    ],\n                    borderWidth: 1,\n                }],\n        };\n        rows.forEach(row=>{\n            auxChartData.labels.push(row.mc);\n            auxChartData.datasets[0].data.push(row.fo);\n            auxChartData.datasets[1].data.push(row.fe);\n        });\n        setChartData(auxChartData);\n    },[rows]);\n\n    return (\n    <>\n    <h1>Punto B y C</h1>\n    <div \n        style={{\n            width:'48%',\n            display:'inline-block',\n            verticalAlign:'top',\n            textAlign:'right',\n    }}>\n        <div>\n            <label>K:</label>\n            <input \n                type='number' \n                value={k}\n                onChange={(e)=>{\n                    setK(Number.parseInt(e.target.value));\n                }}\n                />\n        </div>\n        <div>\n            <label>N:</label>\n            <input \n                type='number' \n                value={n}\n                onChange={(e)=>{\n                    setN(Number.parseInt(e.target.value));\n                }}\n            />\n        </div>\n    </div>\n    <div \n        style={{\n            width:'50%',\n            display:'inline-block',\n            verticalAlign:'top',\n            textAlign:'left',\n            marginLeft:'1em',\n    }}>\n        <label>Tipo Generador:</label>\n        <select\n            onChange={ e => {\n                setGeneratorType(Number.parseInt(e.target.value));\n            }}\n            > \n            <option value='1'>DEL LENGUAJE</option>\n            <option value='2'>CONGRUENCIAL MIXTO</option>\n        </select>\n        { generatorType === 2 &&\n            <>\n                <div>\n                    <label>Xo:</label>\n                    <input \n                        type='number' \n                        value={x0}\n                        onChange={(e)=>{\n                            setX0(Number.parseInt(e.target.value));\n                        }}\n                        />\n                </div>\n                <div>\n                    <label>K:</label>\n                    <input \n                        type='number' \n                        value={kk}\n                        onChange={(e)=>{\n                            setKk(Number.parseInt(e.target.value));\n                        }}\n                    />\n                </div>\n                <div>\n                    <label>G:</label>\n                    <input \n                        type='number' \n                        value={g}\n                        onChange={(e)=>{\n                            setG(Number.parseInt(e.target.value));\n                        }}\n                    />\n                </div>            \n                <div>\n                    <label>C:</label>\n                    <input \n                    type='number' \n                    value={c}\n                    onChange={(e)=>{\n                        setC(Number.parseInt(e.target.value));\n                    }}\n                />\n                </div>\n                <div>\n                    <label>A:</label>\n                    <input \n                        type='number'\n                        disabled={true}\n                        value={generadorInstance?generadorInstance.a:''}                    \n                    />\n                </div>\n                <div>\n                    <label>M:</label>\n                    <input \n                        type='number'\n                        disabled={true}\n                        value={generadorInstance?generadorInstance.m:''}                    \n                    />\n                </div>\n            </>        \n        }\n    </div>\n    \n    <div>\n        <div style={{\n            width:'48%',\n            display:'inline-block',\n            verticalAlign:'top'\n        }}>\n            <h2>Muestra</h2>\n            <table>\n                <thead>\n                    <th>i</th>\n                    <th>Xi</th>\n                </thead>\n                <tbody>\n                {muestra.map( (item,i) => (\n                    <tr>\n                        <td>{i+1}</td><td>{item}</td>\n                    </tr>))}\n                </tbody>\n            </table>\n        </div>\n        <div style={{\n            width:'50%',\n            display:'inline-block',\n            marginLeft:'1em',\n        }}>\n        <table>\n            <thead>\n                <th>i</th>\n                <th>Min</th>\n                <th>Max</th>\n                <th>MC</th>\n                <th>FO</th>\n                <th>FE</th>\n                <th>FO-FE</th>\n                <th>(FO-FE)^2</th>\n                <th>(FO-FE)^2/FE</th>\n                <th>C = Σ (FO-FE)^2/FE </th>\n            </thead>\n            <tbody>\n                {rows.map((row,i)=>(<tr>\n                    <td>{i+1}</td>\n                    <td>{row.min}</td>\n                    <td>{row.max}</td>\n                    <td>{row.mc}</td>\n                    <td>{row.fo}</td>\n                    <td>{row.fe}</td>\n                    <td>{row.col1}</td>\n                    <td>{row.col2}</td>\n                    <td>{row.col3}</td>\n                    <td>{row.c}</td>\n                </tr>))}\n            </tbody>\n        </table>\n        <Bar data={chartData}/>\n        </div>\n    </div>\n    </>);\n}\n\nexport default PuntoB;","import logo from './logo.svg';\nimport './App.css';\nimport PuntoA from './pages/PuntoA';\nimport PuntoB from './pages/PuntoB';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n      <Router>\n      <div className=\"App\">\n      <nav>\n          <ul>\n            <li>\n              <Link to=\"/PuntoA\">Punto A</Link>\n            </li>\n            <li>\n              <Link to=\"/PuntoBC\">Punto B y C</Link>\n            </li>\n          </ul>\n      </nav>\n      <Switch>\n          <Route path=\"/PuntoBC\">\n            <PuntoB />\n          </Route>\n          <Route path=\"/PuntoA\">\n            <PuntoA />\n          </Route>\n          <Route path=\"/\">\n            <PuntoA />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}